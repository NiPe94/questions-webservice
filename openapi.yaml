openapi: "3.0.0"
info:
  version: 1.0.0
  title: Stackoverflow API
  description: A sample API to query stackoverflow
paths:
  /users/{user_id}:
    get:
      description: Returns a user based on a single ID
      operationId: findUserById
      parameters:
        - name: user_id
          in: path
          description: ID of user to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /questions:
    get:
      description: |
        Returns all questions from the system
      operationId: findQuestions
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: question response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /questions/{id}:
    get:
      description: Returns a question based on a single ID
      operationId: findQuestionById
      parameters:
        - name: id
          in: path
          description: ID of question to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: question response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: deletes a single question based on the ID supplied
      operationId: deleteQuestionByID
      parameters:
        - name: id
          in: path
          description: ID of question to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: question deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    User:
      type: object
      required: 
        - user_id
      properties:
        user_id:
          type: integer
          format: int64
        creation_date:
          type: string
          format: date-time
        display_name:
          type: string
    Question:
      type: object
      required:
        - id  
      properties:
        id:
          type: integer
          format: int64
        tags:
          type: array
          items:
            type: string
        is_answered:
          type: boolean
          default: false
        view_count:
          type: integer
          format: int64
        answer_count:
          type: integer
          format: int64
        creation_date:
          type: string
          format: date-time
        user_id:
          type: integer
          format: int64
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
